// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: api/v1/requests.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/superblocksteam/agent/types/gen/go/common/v1"
	v11 "github.com/superblocksteam/agent/types/gen/go/utils/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PatchApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api *Api `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Types that are assignable to GitRef:
	//
	//	*PatchApi_CommitId
	//	*PatchApi_BranchName
	GitRef isPatchApi_GitRef `protobuf_oneof:"git_ref"`
}

func (x *PatchApi) Reset() {
	*x = PatchApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchApi) ProtoMessage() {}

func (x *PatchApi) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchApi.ProtoReflect.Descriptor instead.
func (*PatchApi) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{0}
}

func (x *PatchApi) GetApi() *Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (m *PatchApi) GetGitRef() isPatchApi_GitRef {
	if m != nil {
		return m.GitRef
	}
	return nil
}

func (x *PatchApi) GetCommitId() string {
	if x, ok := x.GetGitRef().(*PatchApi_CommitId); ok {
		return x.CommitId
	}
	return ""
}

func (x *PatchApi) GetBranchName() string {
	if x, ok := x.GetGitRef().(*PatchApi_BranchName); ok {
		return x.BranchName
	}
	return ""
}

type isPatchApi_GitRef interface {
	isPatchApi_GitRef()
}

type PatchApi_CommitId struct {
	CommitId string `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3,oneof"`
}

type PatchApi_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

func (*PatchApi_CommitId) isPatchApi_GitRef() {}

func (*PatchApi_BranchName) isPatchApi_GitRef() {}

// PATCH api/v3/apis
type PatchApisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patches []*PatchApi `protobuf:"bytes,1,rep,name=patches,proto3" json:"patches,omitempty"`
}

func (x *PatchApisRequest) Reset() {
	*x = PatchApisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchApisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchApisRequest) ProtoMessage() {}

func (x *PatchApisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchApisRequest.ProtoReflect.Descriptor instead.
func (*PatchApisRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{1}
}

func (x *PatchApisRequest) GetPatches() []*PatchApi {
	if x != nil {
		return x.Patches
	}
	return nil
}

type PatchApisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*PatchApisResponse_Status `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	Links    map[string]*v1.Link         `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LinksV2  []*v1.Links                 `protobuf:"bytes,3,rep,name=links_v2,json=linksV2,proto3" json:"links_v2,omitempty"`
}

func (x *PatchApisResponse) Reset() {
	*x = PatchApisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchApisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchApisResponse) ProtoMessage() {}

func (x *PatchApisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchApisResponse.ProtoReflect.Descriptor instead.
func (*PatchApisResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{2}
}

func (x *PatchApisResponse) GetStatuses() []*PatchApisResponse_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *PatchApisResponse) GetLinks() map[string]*v1.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *PatchApisResponse) GetLinksV2() []*v1.Links {
	if x != nil {
		return x.LinksV2
	}
	return nil
}

type UpdateApiSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	// Types that are assignable to GitRef:
	//
	//	*UpdateApiSignature_CommitId
	//	*UpdateApiSignature_BranchName
	GitRef isUpdateApiSignature_GitRef `protobuf_oneof:"git_ref"`
	// Types that are assignable to Result:
	//
	//	*UpdateApiSignature_Signature
	//	*UpdateApiSignature_Errors
	Result  isUpdateApiSignature_Result `protobuf_oneof:"result"`
	Updated *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateApiSignature) Reset() {
	*x = UpdateApiSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiSignature) ProtoMessage() {}

func (x *UpdateApiSignature) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiSignature.ProtoReflect.Descriptor instead.
func (*UpdateApiSignature) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateApiSignature) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (m *UpdateApiSignature) GetGitRef() isUpdateApiSignature_GitRef {
	if m != nil {
		return m.GitRef
	}
	return nil
}

func (x *UpdateApiSignature) GetCommitId() string {
	if x, ok := x.GetGitRef().(*UpdateApiSignature_CommitId); ok {
		return x.CommitId
	}
	return ""
}

func (x *UpdateApiSignature) GetBranchName() string {
	if x, ok := x.GetGitRef().(*UpdateApiSignature_BranchName); ok {
		return x.BranchName
	}
	return ""
}

func (m *UpdateApiSignature) GetResult() isUpdateApiSignature_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UpdateApiSignature) GetSignature() *v11.Signature {
	if x, ok := x.GetResult().(*UpdateApiSignature_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *UpdateApiSignature) GetErrors() *SignatureRotationErrors {
	if x, ok := x.GetResult().(*UpdateApiSignature_Errors); ok {
		return x.Errors
	}
	return nil
}

func (x *UpdateApiSignature) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type isUpdateApiSignature_GitRef interface {
	isUpdateApiSignature_GitRef()
}

type UpdateApiSignature_CommitId struct {
	CommitId string `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3,oneof"`
}

type UpdateApiSignature_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

func (*UpdateApiSignature_CommitId) isUpdateApiSignature_GitRef() {}

func (*UpdateApiSignature_BranchName) isUpdateApiSignature_GitRef() {}

type isUpdateApiSignature_Result interface {
	isUpdateApiSignature_Result()
}

type UpdateApiSignature_Signature struct {
	Signature *v11.Signature `protobuf:"bytes,4,opt,name=signature,proto3,oneof"`
}

type UpdateApiSignature_Errors struct {
	Errors *SignatureRotationErrors `protobuf:"bytes,6,opt,name=errors,proto3,oneof"`
}

func (*UpdateApiSignature_Signature) isUpdateApiSignature_Result() {}

func (*UpdateApiSignature_Errors) isUpdateApiSignature_Result() {}

type UpdateApplicationSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// Types that are assignable to GitRef:
	//
	//	*UpdateApplicationSignature_CommitId
	//	*UpdateApplicationSignature_BranchName
	GitRef isUpdateApplicationSignature_GitRef `protobuf_oneof:"git_ref"`
	// Types that are assignable to Result:
	//
	//	*UpdateApplicationSignature_Signature
	//	*UpdateApplicationSignature_Errors
	Result      isUpdateApplicationSignature_Result `protobuf_oneof:"result"`
	Updated     *timestamppb.Timestamp              `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	PageVersion int32                               `protobuf:"varint,6,opt,name=page_version,json=pageVersion,proto3" json:"page_version,omitempty"`
}

func (x *UpdateApplicationSignature) Reset() {
	*x = UpdateApplicationSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationSignature) ProtoMessage() {}

func (x *UpdateApplicationSignature) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationSignature.ProtoReflect.Descriptor instead.
func (*UpdateApplicationSignature) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateApplicationSignature) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (m *UpdateApplicationSignature) GetGitRef() isUpdateApplicationSignature_GitRef {
	if m != nil {
		return m.GitRef
	}
	return nil
}

func (x *UpdateApplicationSignature) GetCommitId() string {
	if x, ok := x.GetGitRef().(*UpdateApplicationSignature_CommitId); ok {
		return x.CommitId
	}
	return ""
}

func (x *UpdateApplicationSignature) GetBranchName() string {
	if x, ok := x.GetGitRef().(*UpdateApplicationSignature_BranchName); ok {
		return x.BranchName
	}
	return ""
}

func (m *UpdateApplicationSignature) GetResult() isUpdateApplicationSignature_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UpdateApplicationSignature) GetSignature() *v11.Signature {
	if x, ok := x.GetResult().(*UpdateApplicationSignature_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *UpdateApplicationSignature) GetErrors() *SignatureRotationErrors {
	if x, ok := x.GetResult().(*UpdateApplicationSignature_Errors); ok {
		return x.Errors
	}
	return nil
}

func (x *UpdateApplicationSignature) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UpdateApplicationSignature) GetPageVersion() int32 {
	if x != nil {
		return x.PageVersion
	}
	return 0
}

type isUpdateApplicationSignature_GitRef interface {
	isUpdateApplicationSignature_GitRef()
}

type UpdateApplicationSignature_CommitId struct {
	CommitId string `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3,oneof"`
}

type UpdateApplicationSignature_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

func (*UpdateApplicationSignature_CommitId) isUpdateApplicationSignature_GitRef() {}

func (*UpdateApplicationSignature_BranchName) isUpdateApplicationSignature_GitRef() {}

type isUpdateApplicationSignature_Result interface {
	isUpdateApplicationSignature_Result()
}

type UpdateApplicationSignature_Signature struct {
	Signature *v11.Signature `protobuf:"bytes,4,opt,name=signature,proto3,oneof"`
}

type UpdateApplicationSignature_Errors struct {
	Errors *SignatureRotationErrors `protobuf:"bytes,7,opt,name=errors,proto3,oneof"`
}

func (*UpdateApplicationSignature_Signature) isUpdateApplicationSignature_Result() {}

func (*UpdateApplicationSignature_Errors) isUpdateApplicationSignature_Result() {}

type SignatureRotationErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors    []*SignatureRotationError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	KeyId     string                    `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PublicKey []byte                    `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Algorithm v11.Signature_Algorithm   `protobuf:"varint,4,opt,name=algorithm,proto3,enum=utils.v1.Signature_Algorithm" json:"algorithm,omitempty"`
}

func (x *SignatureRotationErrors) Reset() {
	*x = SignatureRotationErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureRotationErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureRotationErrors) ProtoMessage() {}

func (x *SignatureRotationErrors) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureRotationErrors.ProtoReflect.Descriptor instead.
func (*SignatureRotationErrors) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{5}
}

func (x *SignatureRotationErrors) GetErrors() []*SignatureRotationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *SignatureRotationErrors) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SignatureRotationErrors) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SignatureRotationErrors) GetAlgorithm() v11.Signature_Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return v11.Signature_Algorithm(0)
}

type SignatureRotationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignatureRotationError) Reset() {
	*x = SignatureRotationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureRotationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureRotationError) ProtoMessage() {}

func (x *SignatureRotationError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureRotationError.ProtoReflect.Descriptor instead.
func (*SignatureRotationError) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{6}
}

func (x *SignatureRotationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PUT api/v3/api/signatures
type UpdateApiSignaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*UpdateApiSignature `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateApiSignaturesRequest) Reset() {
	*x = UpdateApiSignaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiSignaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiSignaturesRequest) ProtoMessage() {}

func (x *UpdateApiSignaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiSignaturesRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiSignaturesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateApiSignaturesRequest) GetUpdates() []*UpdateApiSignature {
	if x != nil {
		return x.Updates
	}
	return nil
}

// PUT api/v2/application/signatures
type UpdateApplicationSignaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*UpdateApplicationSignature `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *UpdateApplicationSignaturesRequest) Reset() {
	*x = UpdateApplicationSignaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationSignaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationSignaturesRequest) ProtoMessage() {}

func (x *UpdateApplicationSignaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationSignaturesRequest.ProtoReflect.Descriptor instead.
func (*UpdateApplicationSignaturesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateApplicationSignaturesRequest) GetUpdates() []*UpdateApplicationSignature {
	if x != nil {
		return x.Updates
	}
	return nil
}

type UpdateApplicationSignaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*UpdateApplicationSignaturesResponse_Status `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	Links    map[string]*v1.Link                           `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LinksV2  []*v1.Links                                   `protobuf:"bytes,3,rep,name=links_v2,json=linksV2,proto3" json:"links_v2,omitempty"`
}

func (x *UpdateApplicationSignaturesResponse) Reset() {
	*x = UpdateApplicationSignaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationSignaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationSignaturesResponse) ProtoMessage() {}

func (x *UpdateApplicationSignaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationSignaturesResponse.ProtoReflect.Descriptor instead.
func (*UpdateApplicationSignaturesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateApplicationSignaturesResponse) GetStatuses() []*UpdateApplicationSignaturesResponse_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *UpdateApplicationSignaturesResponse) GetLinks() map[string]*v1.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *UpdateApplicationSignaturesResponse) GetLinksV2() []*v1.Links {
	if x != nil {
		return x.LinksV2
	}
	return nil
}

type UpdateApiSignaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*UpdateApiSignaturesResponse_Status `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	Links    map[string]*v1.Link                   `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LinksV2  []*v1.Links                           `protobuf:"bytes,3,rep,name=links_v2,json=linksV2,proto3" json:"links_v2,omitempty"`
}

func (x *UpdateApiSignaturesResponse) Reset() {
	*x = UpdateApiSignaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiSignaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiSignaturesResponse) ProtoMessage() {}

func (x *UpdateApiSignaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiSignaturesResponse.ProtoReflect.Descriptor instead.
func (*UpdateApiSignaturesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateApiSignaturesResponse) GetStatuses() []*UpdateApiSignaturesResponse_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *UpdateApiSignaturesResponse) GetLinks() map[string]*v1.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *UpdateApiSignaturesResponse) GetLinksV2() []*v1.Links {
	if x != nil {
		return x.LinksV2
	}
	return nil
}

type GenericBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GenericBatch_Items `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenericBatch) Reset() {
	*x = GenericBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericBatch) ProtoMessage() {}

func (x *GenericBatch) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericBatch.ProtoReflect.Descriptor instead.
func (*GenericBatch) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{11}
}

func (x *GenericBatch) GetData() *GenericBatch_Items {
	if x != nil {
		return x.Data
	}
	return nil
}

type GenericBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GenericBatch `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenericBatchResponse) Reset() {
	*x = GenericBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericBatchResponse) ProtoMessage() {}

func (x *GenericBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericBatchResponse.ProtoReflect.Descriptor instead.
func (*GenericBatchResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{12}
}

func (x *GenericBatchResponse) GetData() *GenericBatch {
	if x != nil {
		return x.Data
	}
	return nil
}

type PatchApisResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId   string    `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	Code    int32     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Error   *v1.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PatchApisResponse_Status) Reset() {
	*x = PatchApisResponse_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchApisResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchApisResponse_Status) ProtoMessage() {}

func (x *PatchApisResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchApisResponse_Status.ProtoReflect.Descriptor instead.
func (*PatchApisResponse_Status) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PatchApisResponse_Status) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *PatchApisResponse_Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PatchApisResponse_Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PatchApisResponse_Status) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateApplicationSignaturesResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// Types that are assignable to GitRef:
	//
	//	*UpdateApplicationSignaturesResponse_Status_CommitId
	//	*UpdateApplicationSignaturesResponse_Status_BranchName
	GitRef  isUpdateApplicationSignaturesResponse_Status_GitRef `protobuf_oneof:"git_ref"`
	Code    int32                                               `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                              `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Error   *v1.Error                                           `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateApplicationSignaturesResponse_Status) Reset() {
	*x = UpdateApplicationSignaturesResponse_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationSignaturesResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationSignaturesResponse_Status) ProtoMessage() {}

func (x *UpdateApplicationSignaturesResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationSignaturesResponse_Status.ProtoReflect.Descriptor instead.
func (*UpdateApplicationSignaturesResponse_Status) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateApplicationSignaturesResponse_Status) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (m *UpdateApplicationSignaturesResponse_Status) GetGitRef() isUpdateApplicationSignaturesResponse_Status_GitRef {
	if m != nil {
		return m.GitRef
	}
	return nil
}

func (x *UpdateApplicationSignaturesResponse_Status) GetCommitId() string {
	if x, ok := x.GetGitRef().(*UpdateApplicationSignaturesResponse_Status_CommitId); ok {
		return x.CommitId
	}
	return ""
}

func (x *UpdateApplicationSignaturesResponse_Status) GetBranchName() string {
	if x, ok := x.GetGitRef().(*UpdateApplicationSignaturesResponse_Status_BranchName); ok {
		return x.BranchName
	}
	return ""
}

func (x *UpdateApplicationSignaturesResponse_Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateApplicationSignaturesResponse_Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateApplicationSignaturesResponse_Status) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type isUpdateApplicationSignaturesResponse_Status_GitRef interface {
	isUpdateApplicationSignaturesResponse_Status_GitRef()
}

type UpdateApplicationSignaturesResponse_Status_CommitId struct {
	CommitId string `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3,oneof"`
}

type UpdateApplicationSignaturesResponse_Status_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

func (*UpdateApplicationSignaturesResponse_Status_CommitId) isUpdateApplicationSignaturesResponse_Status_GitRef() {
}

func (*UpdateApplicationSignaturesResponse_Status_BranchName) isUpdateApplicationSignaturesResponse_Status_GitRef() {
}

type UpdateApiSignaturesResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	// Types that are assignable to GitRef:
	//
	//	*UpdateApiSignaturesResponse_Status_CommitId
	//	*UpdateApiSignaturesResponse_Status_BranchName
	GitRef  isUpdateApiSignaturesResponse_Status_GitRef `protobuf_oneof:"git_ref"`
	Code    int32                                       `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Error   *v1.Error                                   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateApiSignaturesResponse_Status) Reset() {
	*x = UpdateApiSignaturesResponse_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiSignaturesResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiSignaturesResponse_Status) ProtoMessage() {}

func (x *UpdateApiSignaturesResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiSignaturesResponse_Status.ProtoReflect.Descriptor instead.
func (*UpdateApiSignaturesResponse_Status) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UpdateApiSignaturesResponse_Status) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (m *UpdateApiSignaturesResponse_Status) GetGitRef() isUpdateApiSignaturesResponse_Status_GitRef {
	if m != nil {
		return m.GitRef
	}
	return nil
}

func (x *UpdateApiSignaturesResponse_Status) GetCommitId() string {
	if x, ok := x.GetGitRef().(*UpdateApiSignaturesResponse_Status_CommitId); ok {
		return x.CommitId
	}
	return ""
}

func (x *UpdateApiSignaturesResponse_Status) GetBranchName() string {
	if x, ok := x.GetGitRef().(*UpdateApiSignaturesResponse_Status_BranchName); ok {
		return x.BranchName
	}
	return ""
}

func (x *UpdateApiSignaturesResponse_Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateApiSignaturesResponse_Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateApiSignaturesResponse_Status) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type isUpdateApiSignaturesResponse_Status_GitRef interface {
	isUpdateApiSignaturesResponse_Status_GitRef()
}

type UpdateApiSignaturesResponse_Status_CommitId struct {
	CommitId string `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3,oneof"`
}

type UpdateApiSignaturesResponse_Status_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

func (*UpdateApiSignaturesResponse_Status_CommitId) isUpdateApiSignaturesResponse_Status_GitRef() {}

func (*UpdateApiSignaturesResponse_Status_BranchName) isUpdateApiSignaturesResponse_Status_GitRef() {}

type GenericBatch_Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*structpb.Struct `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GenericBatch_Items) Reset() {
	*x = GenericBatch_Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_requests_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericBatch_Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericBatch_Items) ProtoMessage() {}

func (x *GenericBatch_Items) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_requests_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericBatch_Items.ProtoReflect.Descriptor instead.
func (*GenericBatch_Items) Descriptor() ([]byte, []int) {
	return file_api_v1_requests_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GenericBatch_Items) GetItems() []*structpb.Struct {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_api_v1_requests_proto protoreflect.FileDescriptor

var file_api_v1_requests_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x10, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7d, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x69, 0x12, 0x1d, 0x0a, 0x03,
	0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a,
	0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22,
	0x3e, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x70, 0x69, 0x52, 0x07, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22,
	0xfc, 0x02, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x2b, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x76, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x56, 0x32, 0x1a, 0x75, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x49, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x48, 0x01, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x42, 0x0f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xf1, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x01, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x42, 0x0f, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x17,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x22, 0x32, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x22, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x97,
	0x04, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x76, 0x32,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x56,
	0x32, 0x1a, 0xd9, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x10, 0x0a, 0x07, 0x67,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a, 0x49, 0x0a,
	0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xef, 0x03, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x44, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f,
	0x76, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x56, 0x32, 0x1a, 0xc9, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x10, 0x0a,
	0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x1a,
	0x49, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x0c, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x36, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_requests_proto_rawDescOnce sync.Once
	file_api_v1_requests_proto_rawDescData = file_api_v1_requests_proto_rawDesc
)

func file_api_v1_requests_proto_rawDescGZIP() []byte {
	file_api_v1_requests_proto_rawDescOnce.Do(func() {
		file_api_v1_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_requests_proto_rawDescData)
	})
	return file_api_v1_requests_proto_rawDescData
}

var file_api_v1_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_v1_requests_proto_goTypes = []interface{}{
	(*PatchApi)(nil),                                   // 0: api.v1.PatchApi
	(*PatchApisRequest)(nil),                           // 1: api.v1.PatchApisRequest
	(*PatchApisResponse)(nil),                          // 2: api.v1.PatchApisResponse
	(*UpdateApiSignature)(nil),                         // 3: api.v1.UpdateApiSignature
	(*UpdateApplicationSignature)(nil),                 // 4: api.v1.UpdateApplicationSignature
	(*SignatureRotationErrors)(nil),                    // 5: api.v1.SignatureRotationErrors
	(*SignatureRotationError)(nil),                     // 6: api.v1.SignatureRotationError
	(*UpdateApiSignaturesRequest)(nil),                 // 7: api.v1.UpdateApiSignaturesRequest
	(*UpdateApplicationSignaturesRequest)(nil),         // 8: api.v1.UpdateApplicationSignaturesRequest
	(*UpdateApplicationSignaturesResponse)(nil),        // 9: api.v1.UpdateApplicationSignaturesResponse
	(*UpdateApiSignaturesResponse)(nil),                // 10: api.v1.UpdateApiSignaturesResponse
	(*GenericBatch)(nil),                               // 11: api.v1.GenericBatch
	(*GenericBatchResponse)(nil),                       // 12: api.v1.GenericBatchResponse
	(*PatchApisResponse_Status)(nil),                   // 13: api.v1.PatchApisResponse.Status
	nil,                                                // 14: api.v1.PatchApisResponse.LinksEntry
	(*UpdateApplicationSignaturesResponse_Status)(nil), // 15: api.v1.UpdateApplicationSignaturesResponse.Status
	nil, // 16: api.v1.UpdateApplicationSignaturesResponse.LinksEntry
	(*UpdateApiSignaturesResponse_Status)(nil), // 17: api.v1.UpdateApiSignaturesResponse.Status
	nil,                           // 18: api.v1.UpdateApiSignaturesResponse.LinksEntry
	(*GenericBatch_Items)(nil),    // 19: api.v1.GenericBatch.Items
	(*Api)(nil),                   // 20: api.v1.Api
	(*v1.Links)(nil),              // 21: common.v1.Links
	(*v11.Signature)(nil),         // 22: utils.v1.Signature
	(*timestamppb.Timestamp)(nil), // 23: google.protobuf.Timestamp
	(v11.Signature_Algorithm)(0),  // 24: utils.v1.Signature.Algorithm
	(*v1.Error)(nil),              // 25: common.v1.Error
	(*v1.Link)(nil),               // 26: common.v1.Link
	(*structpb.Struct)(nil),       // 27: google.protobuf.Struct
}
var file_api_v1_requests_proto_depIdxs = []int32{
	20, // 0: api.v1.PatchApi.api:type_name -> api.v1.Api
	0,  // 1: api.v1.PatchApisRequest.patches:type_name -> api.v1.PatchApi
	13, // 2: api.v1.PatchApisResponse.statuses:type_name -> api.v1.PatchApisResponse.Status
	14, // 3: api.v1.PatchApisResponse.links:type_name -> api.v1.PatchApisResponse.LinksEntry
	21, // 4: api.v1.PatchApisResponse.links_v2:type_name -> common.v1.Links
	22, // 5: api.v1.UpdateApiSignature.signature:type_name -> utils.v1.Signature
	5,  // 6: api.v1.UpdateApiSignature.errors:type_name -> api.v1.SignatureRotationErrors
	23, // 7: api.v1.UpdateApiSignature.updated:type_name -> google.protobuf.Timestamp
	22, // 8: api.v1.UpdateApplicationSignature.signature:type_name -> utils.v1.Signature
	5,  // 9: api.v1.UpdateApplicationSignature.errors:type_name -> api.v1.SignatureRotationErrors
	23, // 10: api.v1.UpdateApplicationSignature.updated:type_name -> google.protobuf.Timestamp
	6,  // 11: api.v1.SignatureRotationErrors.errors:type_name -> api.v1.SignatureRotationError
	24, // 12: api.v1.SignatureRotationErrors.algorithm:type_name -> utils.v1.Signature.Algorithm
	3,  // 13: api.v1.UpdateApiSignaturesRequest.updates:type_name -> api.v1.UpdateApiSignature
	4,  // 14: api.v1.UpdateApplicationSignaturesRequest.updates:type_name -> api.v1.UpdateApplicationSignature
	15, // 15: api.v1.UpdateApplicationSignaturesResponse.statuses:type_name -> api.v1.UpdateApplicationSignaturesResponse.Status
	16, // 16: api.v1.UpdateApplicationSignaturesResponse.links:type_name -> api.v1.UpdateApplicationSignaturesResponse.LinksEntry
	21, // 17: api.v1.UpdateApplicationSignaturesResponse.links_v2:type_name -> common.v1.Links
	17, // 18: api.v1.UpdateApiSignaturesResponse.statuses:type_name -> api.v1.UpdateApiSignaturesResponse.Status
	18, // 19: api.v1.UpdateApiSignaturesResponse.links:type_name -> api.v1.UpdateApiSignaturesResponse.LinksEntry
	21, // 20: api.v1.UpdateApiSignaturesResponse.links_v2:type_name -> common.v1.Links
	19, // 21: api.v1.GenericBatch.data:type_name -> api.v1.GenericBatch.Items
	11, // 22: api.v1.GenericBatchResponse.data:type_name -> api.v1.GenericBatch
	25, // 23: api.v1.PatchApisResponse.Status.error:type_name -> common.v1.Error
	26, // 24: api.v1.PatchApisResponse.LinksEntry.value:type_name -> common.v1.Link
	25, // 25: api.v1.UpdateApplicationSignaturesResponse.Status.error:type_name -> common.v1.Error
	26, // 26: api.v1.UpdateApplicationSignaturesResponse.LinksEntry.value:type_name -> common.v1.Link
	25, // 27: api.v1.UpdateApiSignaturesResponse.Status.error:type_name -> common.v1.Error
	26, // 28: api.v1.UpdateApiSignaturesResponse.LinksEntry.value:type_name -> common.v1.Link
	27, // 29: api.v1.GenericBatch.Items.items:type_name -> google.protobuf.Struct
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_v1_requests_proto_init() }
func file_api_v1_requests_proto_init() {
	if File_api_v1_requests_proto != nil {
		return
	}
	file_api_v1_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_requests_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchApisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchApisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApplicationSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureRotationErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureRotationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiSignaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApplicationSignaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApplicationSignaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiSignaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchApisResponse_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApplicationSignaturesResponse_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiSignaturesResponse_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_requests_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericBatch_Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_requests_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PatchApi_CommitId)(nil),
		(*PatchApi_BranchName)(nil),
	}
	file_api_v1_requests_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UpdateApiSignature_CommitId)(nil),
		(*UpdateApiSignature_BranchName)(nil),
		(*UpdateApiSignature_Signature)(nil),
		(*UpdateApiSignature_Errors)(nil),
	}
	file_api_v1_requests_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*UpdateApplicationSignature_CommitId)(nil),
		(*UpdateApplicationSignature_BranchName)(nil),
		(*UpdateApplicationSignature_Signature)(nil),
		(*UpdateApplicationSignature_Errors)(nil),
	}
	file_api_v1_requests_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*UpdateApplicationSignaturesResponse_Status_CommitId)(nil),
		(*UpdateApplicationSignaturesResponse_Status_BranchName)(nil),
	}
	file_api_v1_requests_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*UpdateApiSignaturesResponse_Status_CommitId)(nil),
		(*UpdateApiSignaturesResponse_Status_BranchName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_requests_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_requests_proto_goTypes,
		DependencyIndexes: file_api_v1_requests_proto_depIdxs,
		MessageInfos:      file_api_v1_requests_proto_msgTypes,
	}.Build()
	File_api_v1_requests_proto = out.File
	file_api_v1_requests_proto_rawDesc = nil
	file_api_v1_requests_proto_goTypes = nil
	file_api_v1_requests_proto_depIdxs = nil
}
